{"version":3,"sources":["components/ConvexComponent.js","components/ConcaveComponent.js","Button.js","components/ListItem.js","DropDownMenu.js","components/SearchForm.js","components/CatDisplay.js","components/TalkBot.js","components/Chatbot.js","App.js","reportWebVitals.js","index.js"],"names":["ConvexComponent","styled","div","ConcaveComponent","OffButton","OnButton","Button","useState","state","setState","toggleButton","onClick","menuItems","NonDotList","ul","Item","li","ListItem","stateHooks","map","key","val","Container","Drawer","Inivisible","DropDownMenu","open","setOpen","handleDrawerToggle","IconButton","className","SearchForm","InputBase","placeholder","axios","defaults","baseURL","headers","common","process","CatImage","img","CatDisplay","selectedBreed","setSelectedBreed","images","setImages","breeds","setBreeds","getBreeds","a","res","data","getCatsImagesByBreed","breed_id","loadBreedImages","breed_images","onBreedSelectChange","e","target","value","useEffect","length","console","log","onChange","breed","id","name","image","alt","src","url","Form","form","TalkBot","props","text","setText","setReply","formdata","FormData","append","talkToBot","preventDefault","fetch","method","body","then","response","json","results","reply","catch","onSubmit","type","theme","width","ChatbotImage","ChatbotReplay","Chatbot","href","BackgroundText","p","media","lessThan","App","isButtonShow","setButtonShow","isSearchFormShow","setSearchForm","isCatDisplayShow","setCatDisplay","isChatbotShow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d69bc208.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ConvexComponent = styled.div`\n  box-shadow: 2px 2px 6px #BBC9D3,\n  -2px -2px 6px #F0FAFF;\n  text-shadow: 2px 2px 6px #AFAFAF,\n  -2px -2px 6px #ECECEC;\n`","import styled from 'styled-components';\n\nexport const ConcaveComponent = styled.div`\n  box-shadow: 2px 2px 6px #BBC9D3 inset,\n  -2px -2px 6px #F0FAFF inset;\n`\n","import { useState } from 'react';\nimport { ConvexComponent } from './components/ConvexComponent';\nimport { ConcaveComponent } from './components/ConcaveComponent';\nimport styled from 'styled-components';\n\nconst OffButton = styled(ConcaveComponent)`\n  font-family: 'Century Gothic';\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 25%;\n  user-select: none;\n  font-size: 2rem;\n`\n\nconst OnButton = styled(ConvexComponent)`\n  font-family: 'Century Gothic';\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 25%;\n  user-select: none;\n  font-size: 2rem;\n`\n\nexport const Button = () => {\n  const [state, setState] = useState('ON');\n  const toggleButton = () => {\n    const buttonStates = (state === 'ON') ? 'OFF' : 'ON';\n    setState(buttonStates);\n  }\n  return (\n    <div>\n      {\n        state === 'ON'\n          ? <OnButton state={state} onClick={toggleButton}>{state}</OnButton>\n          : <OffButton state={state} onClick={toggleButton}>{state}</OffButton>\n      }\n    </div>\n  )\n}","import styled from 'styled-components';\n\nconst menuItems = [\n  'Button',\n  'SearchForm',\n  'CatDisplay',\n  'Chatbot',\n];\n\nconst NonDotList = styled.ul`\n  list-style: none;\n  text-align: left;\n  font-size: 1.2rem;\n  line-height: 2rem;\n`\n\nconst Item = styled.li`\n  cursor: pointer;\n  &::before {\n    content: '+ '\n  }\n`\n\nexport const ListItem = ({stateHooks}) => {\n  return (\n    <NonDotList>\n    {\n      menuItems.map((key, val) => {\n        return <Item key={ key } onClick={stateHooks[val]}>{ key }</Item>\n      })\n    }\n    </NonDotList>\n  )\n}","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { ListItem } from './components/ListItem';\nimport { ConvexComponent } from './components/ConvexComponent';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nconst Container = styled(ConvexComponent)`\n  border-radius: 50%;\n  position: absolute;\n  right: 2rem;\n`\n\nconst Drawer = styled(ConvexComponent)`\n  width: 12rem;\n  transition-duration: 0.6s;\n  position: absolute;\n  right: 0;\n`\n\nconst Inivisible = styled.div`\n  width: 0;\n  display: none;\n`\n\nexport const DropDownMenu = ({ stateHooks }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    const menuState = (open === true) ? false : true;\n    setOpen(menuState);\n  }\n\n  return (\n    <Container>\n      <IconButton onClick={handleDrawerToggle} className={open ? 'open' : ''}>\n        {\n          open === true ? <ChevronRightIcon /> : <MenuIcon />\n        }\n      </IconButton>\n      <div onClick={handleDrawerToggle}>\n      </div>\n      {\n        open === true\n          ?\n            <Drawer>\n              <ListItem stateHooks={stateHooks}/>\n            </Drawer>\n          :\n            <Inivisible>\n              <ListItem stateHooks={stateHooks}/>\n            </Inivisible>\n      }\n    </Container>\n  )\n}","import styled from 'styled-components';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { ConcaveComponent } from './ConcaveComponent';\n\nconst Container = styled(ConcaveComponent)`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  width: 12rem;\n  border-radius: 4px;\n  margin-left: 2rem;\n`\n\nexport const SearchForm = () => {\n  return (\n    <Container>\n      <SearchIcon />\n      <InputBase\n        placeholder=\"Search\"\n      />\n    </Container>\n  )\n}","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\naxios.defaults.baseURL = 'https://api.thecatapi.com/v1';\naxios.defaults.headers.common['x-api-key'] = process.env.REACT_APP_CAT_API_KEY;\n\nconst CatImage = styled.img`\n  max-width: 200px;\n  max-height: 200px;\n`\n\nexport const CatDisplay = () => {\n  const [selectedBreed, setSelectedBreed] = useState('');\n  const [images, setImages] = useState([]);\n  const [breeds, setBreeds] = useState([]);\n\n  const getBreeds = async () => {\n    const res = await axios('/breeds');\n    return res.data;\n  }\n\n  const getCatsImagesByBreed = async (breed_id) => {\n    const res = await axios('/images/search?breed_ids=' + breed_id);\n    return res.data;\n  }\n\n  const loadBreedImages = async (selectedBreed) => {\n    let breed_images = await getCatsImagesByBreed(selectedBreed);\n    setImages(breed_images);\n  }\n\n  const onBreedSelectChange = async (e) => {\n    await setSelectedBreed(e.target.value);\n    await loadBreedImages(e.target.value);\n  }\n\n  useEffect(() => {\n    if( breeds.length === 0 ) {\n      (async () => {\n        try {\n          setBreeds(await getBreeds());\n        } catch (e) {\n          console.log(e);\n        }\n      })();\n    }\n  })\n\n  return (\n    <div>\n      <select\n        value={selectedBreed}\n        onChange={onBreedSelectChange}>\n        <option value=''>select cat type</option>\n        {breeds.map((breed) => <option key={breed.id} value={breed.id}>{breed.name}</option>)}\n      </select>\n\n      <div>\n        {images.map((image) => <CatImage className=\"cat-img\" alt=\"cat image\" src={image.url}></CatImage>)}\n      </div>\n    </div>\n  )\n}","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n`\n\nexport const TalkBot = (props) => {\n  const text = props.text;\n  const setText = props.setText; // APIに渡すテキストをセットする\n  const setReply = props.setReply; // APIからのレスポンスをセットする\n\n  const formdata = new FormData();\n\n  formdata.append('apikey', process.env.REACT_APP_A3RT_API_KEY);\n  formdata.append('query', text);\n\n  const talkToBot = async (e) => {\n    e.preventDefault();\n    fetch('https://api.a3rt.recruit-tech.co.jp/talk/v1/smalltalk', {\n      method: 'post',\n      body: formdata,\n    }).then(response => {\n      response.json().then(data => {\n        setReply(data.results[0].reply);\n      })\n    }).catch(e => console.log(e));\n  }\n\n  return (\n    <Form onSubmit={(e) => talkToBot(e)}>\n      <input type=\"text\" value={text} onChange={(e) => setText( e.target.value )}></input>\n      <button type=\"submit\">🗣</button>\n    </Form>\n  )\n}","import { useState } from 'react';\nimport { TalkBot } from './TalkBot';\nimport styled from 'styled-components';\nimport { ConvexComponent } from './ConvexComponent';\n\nconst Container = styled.div`\n  width: ${({theme}) => theme.width};\n  position: relative;\n`\nconst ChatbotImage = styled.img`\n  width: 100%;\n`\nconst ChatbotReplay = styled(ConvexComponent)`\n  position: absolute;\n  top: 12.5%;\n  left: ${({theme}) => theme.width};\n  text-align: left;\n  text-shadow: none;\n  font-size: 0.8rem;\n  color: #222;\n  width: 8rem;\n  padding: 0.5rem;\n  margin-left: 1rem;\n`\n\nexport const Chatbot = ({theme}) => {\n  const [text, setText] = useState('');\n  const [reply, setReply] = useState('');\n\n  return (\n    <Container theme={theme}>\n      <ChatbotImage src={`${process.env.PUBLIC_URL}/371905140_ROBOT_WAVING_400px.gif`} />\n      <ChatbotReplay theme={theme}>{reply}</ChatbotReplay>\n      <TalkBot\n        text={text}\n        setText={setText}\n        setReply={setReply}  \n      />\n      <small><a href=\"https://cliply.co/clip/robot-waving/\">image by ©︎ cliply.co</a></small>\n    </Container>\n  )\n}","import { useState } from 'react';\nimport styled from 'styled-components';\nimport media from \"styled-media-query\";\nimport './App.css';\nimport { Button } from './Button';\nimport { DropDownMenu } from './DropDownMenu';\nimport { SearchForm } from './components/SearchForm';\nimport { CatDisplay } from './components/CatDisplay';\nimport { Chatbot } from './components/Chatbot';\n\n\nconst BackgroundText = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -150%);\n  font-weight: bold;\n  color: #DCEDF8;\n  text-shadow: 2px 2px 6px #BBC9D3,\n  -2px -2px 6px #FDFFFF;\n  pointer-events: none;\n  font-size: 4rem;\n  ${media.lessThan(\"small\")`\n  /* screen width is less than 450px (small) */\n    font-size: 3rem;\n  `}\n`\n\nfunction App() {\n  const [isButtonShow, setButtonShow] = useState(false);\n  const [isSearchFormShow, setSearchForm] = useState(false);\n  const [isCatDisplayShow, setCatDisplay] = useState(false);\n  const [isChatbotShow, setChatbot] = useState(false);\n\n  const stateHooks = [\n    setButtonShow,\n    setSearchForm,\n    setCatDisplay,\n    setChatbot,\n  ];\n\n  return (\n    <div className=\"App\">\n      <header>\n      </header>\n      <body className=\"Components-area\">\n        {\n          isButtonShow &&\n            <Button />\n        }\n        {\n          isSearchFormShow &&\n            <SearchForm />\n        }\n        {\n          isCatDisplayShow &&\n            <CatDisplay />\n        }\n        {\n          isChatbotShow &&\n            <Chatbot theme={{width: \"180px\"}}/>\n        }\n        <DropDownMenu stateHooks={stateHooks}></DropDownMenu>\n\n      </body>\n      <footer>\n        <BackgroundText>components</BackgroundText>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}